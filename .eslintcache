[{"D:\\Programming\\personal\\map.web\\src\\index.js":"1","D:\\Programming\\personal\\map.web\\src\\App.js":"2","D:\\Programming\\personal\\map.web\\src\\polygon.jsx":"3"},{"size":231,"mtime":1707584274480,"results":"4","hashOfConfig":"5"},{"size":198,"mtime":1707586780389,"results":"6","hashOfConfig":"5"},{"size":2340,"mtime":1707587790827,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1anay4t",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"D:\\Programming\\personal\\map.web\\src\\index.js",[],["17","18"],"D:\\Programming\\personal\\map.web\\src\\App.js",["19"],"import React, { useEffect } from \"react\";\nimport \"./address.css\";\nimport Polygon from \"./polygon\";\nconst App = () => {\n  return (\n    <div>\n      <Polygon />\n    </div>\n  );\n};\n\nexport default App;\n","D:\\Programming\\personal\\map.web\\src\\polygon.jsx",["20","21","22"],"import React, { useState } from \"react\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport {\r\n  MapContainer,\r\n  Polygon,\r\n  TileLayer,\r\n  Map,\r\n  Marker,\r\n  useMapEvents,\r\n} from \"react-leaflet\";\r\nimport { Button, Flex } from \"antd\";\r\n\r\nconst Markers = ({ coordinates, handleClick }) => {\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      handleClick(e);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {coordinates.map((coord, i) => {\r\n        <Marker key={i} position={coord} interactive={false} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  const [coordinates, setCoordinates] = useState([]);\r\n  const [pickingCoordinates, setPickingCoordinates] = useState(false);\r\n  const [polygons, setPolygons] = useState([]);\r\n\r\n  const handleMapClick = (e) => {\r\n    if (pickingCoordinates) {\r\n      setCoordinates((prevCoordinates) => [\r\n        ...prevCoordinates,\r\n        [e.latlng.lat, e.latlng.lng],\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const handleStartPicking = () => {\r\n    setCoordinates([]); // Clear previously selected coordinates\r\n    setPickingCoordinates(true);\r\n  };\r\n\r\n  const handleEndPicking = () => {\r\n    setPickingCoordinates(false);\r\n    setPolygons([...polygons, coordinates]);\r\n    setCoordinates([]);\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n      <Flex gap={10}>\r\n        <Button onClick={handleStartPicking} type=\"primary\">\r\n          Start{\" \"}\r\n        </Button>\r\n        <Button onClick={handleEndPicking} type=\"primary\">\r\n          End{\" \"}\r\n        </Button>\r\n      </Flex>\r\n      <div style={{ width: \"100%\", height: \"90%\" }}>\r\n        <MapContainer\r\n          center={[0, 0]}\r\n          zoom={5}\r\n          style={{ width: \"100%\", height: \"100%\" }}\r\n          scrollWheelZoom={true}\r\n\r\n          // onClick={handleMapClick}\r\n        >\r\n          <Markers handleClick={handleMapClick} coordinates={coordinates} />\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {coordinates.length > 0 && <Polygon positions={coordinates} />}\r\n\r\n          {polygons.map((polygon) => {\r\n            return <Polygon positions={polygon} />;\r\n          })}\r\n        </MapContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":17,"nodeType":"29","messageId":"30","endLine":1,"endColumn":26},{"ruleId":"27","severity":1,"message":"31","line":7,"column":3,"nodeType":"29","messageId":"30","endLine":7,"endColumn":6},{"ruleId":"27","severity":1,"message":"32","line":14,"column":9,"nodeType":"29","messageId":"30","endLine":14,"endColumn":12},{"ruleId":"33","severity":1,"message":"34","line":22,"column":35,"nodeType":"35","messageId":"36","endLine":22,"endColumn":37},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Map' is defined but never used.","'map' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]